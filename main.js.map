{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Create card function\nexport function createCard(\n  userId,\n  card,\n  { showImage, removeCardHandler, likeHandler }\n) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n\n  const cardTitle = cardElement.querySelector('.card__title');\n  const cardImage = cardElement.querySelector('.card__image');\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const likeCount = cardElement.querySelector('.card__like-count');\n\n  cardTitle.textContent = card.name;\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n  likeCount.textContent = card.likes.length;\n\n  const liked = card.likes.find(() => userId);\n\n  cardImage.addEventListener('click', () =>\n    showImage(cardImage.src, cardImage.alt)\n  );\n  likeButton.addEventListener('click', () =>\n    likeHandler(card._id, likeButton, likeCount)\n  );\n\n  if (userId === card.owner._id) {\n    deleteButton.addEventListener('click', () =>\n      removeCardHandler(card._id, cardElement)\n    );\n  } else {\n    deleteButton.remove();\n  }\n\n  if (liked) {\n    toggleLikeButton(true, likeButton);\n  }\n\n  return cardElement;\n}\n\nexport function removeCard(card) {\n  card.remove();\n}\n\nexport function toggleLikeButton(liked, likeButton) {\n  if (liked) {\n    likeButton.classList.add('card__like-button_is-active');\n  } else {\n    likeButton.classList.remove('card__like-button_is-active');\n  }\n}\n\nexport function updateLikeCount(card, likeCountElement) {\n  likeCountElement.textContent = card.likes.length;\n}\n","// Show modal\nexport function openModal(modal) {\n  modal.classList.add('popup_is-opened');\n\n  document.addEventListener('keydown', escPressHandler);\n}\n\n// Hide modal\nexport function closeModal(modal) {\n  modal.classList.remove('popup_is-opened');\n\n  document.removeEventListener('keydown', escPressHandler);\n}\n\nfunction escPressHandler(e) {\n  if (e.key === 'Escape') {\n    const openedModal = document.querySelector('.popup_is-opened');\n    closeModal(openedModal);\n  }\n}\n\nexport function overlayClickHandler(e, modal) {\n  if (e.target === modal) closeModal(modal);\n}\n","export function enableValidation(settings) {\n  const forms = Array.from(document.querySelectorAll(settings.formSelector));\n\n  forms.forEach((form) => {\n    setEventListeners(form, settings);\n  });\n}\n\nexport function clearValidation(form, settings) {\n  const submitButton = form.querySelector(settings.submitButtonSelector);\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\n\n  toggleSubmitButton(inputs, submitButton, settings);\n  inputs.forEach((input) => hideInputError(input, settings));\n}\n\nfunction setEventListeners(form, settings) {\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\n  const submitButton = form.querySelector(settings.submitButtonSelector);\n\n  inputs.forEach((input) => {\n    input.addEventListener('input', () => {\n      isValid(input, settings);\n      toggleSubmitButton(inputs, submitButton, settings);\n    });\n  });\n}\n\nfunction isValid(input, settings) {\n  if (input.validity.patternMismatch) {\n    input.setCustomValidity(input.dataset.errorMessage);\n  } else {\n    input.setCustomValidity('');\n  }\n\n  if (!input.validity.valid) {\n    showInputError(input, input.validationMessage, settings);\n  } else {\n    hideInputError(input, settings);\n  }\n}\n\nfunction hasInvalidInput(inputs) {\n  return inputs.some((input) => !input.validity.valid);\n}\n\nfunction toggleSubmitButton(inputs, button, settings) {\n  if (hasInvalidInput(inputs)) {\n    button.disabled = true;\n    button.classList.add(settings.inactiveButtonClass);\n  } else {\n    button.disabled = false;\n    button.classList.remove(settings.inactiveButtonClass);\n  }\n}\n\nfunction showInputError(input, errMessage, settings) {\n  const inputContainer = input.closest(settings.inputWrapperSelector);\n\n  input.classList.add(settings.inputErrorClass);\n\n  const errorElement = inputContainer.querySelector(settings.errorSelector);\n  errorElement.textContent = errMessage;\n  errorElement.classList.add(settings.errorVisibleClass);\n}\n\nfunction hideInputError(input, settings) {\n  const inputContainer = input.closest(settings.inputWrapperSelector);\n\n  input.classList.remove(settings.inputErrorClass);\n\n  const errorElement = inputContainer.querySelector(settings.errorSelector);\n  errorElement.textContent = '';\n  errorElement.classList.remove(settings.errorVisibleClass);\n}\n","const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-32',\n  headers: {\n    authorization: '69375b7f-2c05-445b-b0a3-b2c0034556e4',\n    'Content-Type': 'application/json',\n  },\n};\n\nconst handleResponse = (res) => {\n  if (Array.isArray(res) && res.every((response) => response.ok)) {\n    return Promise.all(res.map((response) => response.json()));\n  }\n  if (res.ok) return res.json();\n\n  return Promise.reject('Ошибка получения данных');\n};\n\nexport const getUserData = () =>\n  fetch(`${config.baseUrl}/users/me`, { headers: config.headers }).then(\n    handleResponse\n  );\n\nexport const getInitialCards = () =>\n  fetch(`${config.baseUrl}/cards`, { headers: config.headers }).then(\n    handleResponse\n  );\n\nexport const updateUserData = (userData) => {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify(userData),\n  };\n\n  return fetch(`${config.baseUrl}/users/me`, options).then(handleResponse);\n};\n\nexport const postNewCard = (cardData) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify(cardData),\n  };\n\n  return fetch(`${config.baseUrl}/cards`, options).then(handleResponse);\n};\n\nexport const deleteCard = (cardId) => {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      ...config.headers,\n    },\n  };\n\n  return fetch(`${config.baseUrl}/cards/${cardId}`, options).then(\n    handleResponse\n  );\n};\n\nexport const updateLike = (cardId, liked) => {\n  const likeMethod = liked ? 'DELETE' : 'PUT';\n\n  const options = {\n    method: likeMethod,\n    headers: {\n      ...config.headers,\n    },\n  };\n\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, options).then(\n    handleResponse\n  );\n};\n\nexport const updateAvatarUrl = (avatarUrl) => {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify({ avatar: avatarUrl }),\n  };\n\n  return fetch(`${config.baseUrl}/users/me/avatar`, options).then(\n    handleResponse\n  );\n};\n","import '../pages/index.css';\nimport {\n  createCard,\n  removeCard,\n  toggleLikeButton,\n  updateLikeCount,\n} from './card.js';\nimport { openModal, closeModal, overlayClickHandler } from './modal.js';\nimport { clearValidation, enableValidation } from './validation.js';\nimport {\n  getInitialCards,\n  getUserData,\n  updateUserData,\n  postNewCard,\n  deleteCard,\n  updateLike,\n  updateAvatarUrl,\n} from './api.js';\n\nlet userId = null;\nconst cardToDelete = {};\n\nconst validationSettings = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputWrapperSelector: '.popup__input-wrapper',\n  inputErrorClass: 'popup__input_type_error',\n  errorSelector: '.popup__error',\n  errorVisibleClass: 'popup__error_visible',\n};\n\n// DOM\n// General\nconst placesListElement = document.querySelector('.places__list');\nconst profileEditButton = document.querySelector('.profile__edit-button');\nconst newCardButton = document.querySelector('.profile__add-button');\n\n// Profile info\nconst profileImage = document.querySelector('.profile__image');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n\n// Modals\nconst modalTypeEditAvatar = document.querySelector('.popup_type_edit-avatar');\nconst modalTypeEditProfile = document.querySelector('.popup_type_edit');\nconst modalTypeNewCard = document.querySelector('.popup_type_new-card');\nconst modalTypeRemoveCard = document.querySelector('.popup_type_remove-card');\nconst modalTypeImage = document.querySelector('.popup_type_image');\nconst modalImage = modalTypeImage.querySelector('.popup__image');\nconst modalCaption = modalTypeImage.querySelector('.popup__caption');\n\n// Forms\nconst editAvatarForm = document.forms['edit-avatar'];\nconst editProfileForm = document.forms['edit-profile'];\nconst addNewPlaceForm = document.forms['new-place'];\nconst removeCardForm = document.forms['remove-card'];\n\n// Show remote data update status on submit button\nfunction toggleLoadingStatus(button, text) {\n  button.textContent = text;\n}\n\n// Open avatar edit modal\nfunction avatarEditHandler() {\n  editAvatarForm.reset();\n  clearValidation(editAvatarForm, validationSettings);\n  openModal(modalTypeEditAvatar);\n}\n\n// Submit avatar update form\nfunction editAvatarSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Сохранение...');\n\n  updateAvatarUrl(editAvatarForm.link.value)\n    .then((userData) => {\n      profileImage.style.backgroundImage = `url(${userData.avatar})`;\n      closeModal(modalTypeEditAvatar);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Сохранить');\n    });\n}\n\n// Open profile edit modal and insert default data into form\nfunction editProfileHandler() {\n  editProfileForm.name.value = profileTitle.textContent;\n  editProfileForm.description.value = profileDescription.textContent;\n\n  clearValidation(editProfileForm, validationSettings);\n  openModal(modalTypeEditProfile);\n}\n\n// Handle submit on profile edit\nfunction editProfileSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Сохранение...');\n\n  const userData = {\n    name: editProfileForm.name.value,\n    about: editProfileForm.description.value,\n  };\n\n  updateUserData(userData)\n    .then((userData) => {\n      renderProfileInfo(userData);\n      closeModal(modalTypeEditProfile);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Сохранить');\n    });\n}\n\n// Display user data\nfunction renderProfileInfo({ avatar, name, about }) {\n  profileImage.style.backgroundImage = `url(${avatar})`;\n  profileTitle.textContent = name;\n  profileDescription.textContent = about;\n}\n\n// Handle new card button\nfunction addNewCardHandler() {\n  addNewPlaceForm.reset();\n  clearValidation(addNewPlaceForm, validationSettings);\n  openModal(modalTypeNewCard);\n}\n\n// Add new card on new place form submit\nfunction addNewPlaceSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Создание...');\n\n  const card = {\n    name: addNewPlaceForm['place-name'].value,\n    link: addNewPlaceForm.link.value,\n  };\n\n  postNewCard(card)\n    .then((card) => {\n      const cardElement = createCard(userId, card, {\n        showImage,\n        removeCardHandler,\n        likeHandler,\n      });\n      placesListElement.prepend(cardElement);\n      closeModal(modalTypeNewCard);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Создать');\n    });\n}\n\n// Open modal to confirm card deletion\nfunction removeCardHandler(cardId, cardElement) {\n  cardToDelete.id = cardId;\n  cardToDelete.element = cardElement;\n\n  openModal(modalTypeRemoveCard);\n}\n\n// Delete card and close modal\nfunction confirmRemoveCard(e) {\n  e.preventDefault();\n\n  deleteCard(cardToDelete.id)\n    .then(() => {\n      removeCard(cardToDelete.element);\n      closeModal(modalTypeRemoveCard);\n    })\n    .catch((err) => console.error(err));\n}\n\n// Control like button and counter\n// Update like counter through API\nfunction likeHandler(cardId, likeButton, likeCountElement) {\n  const liked = likeButton.classList.contains('card__like-button_is-active');\n\n  updateLike(cardId, liked)\n    .then((card) => {\n      toggleLikeButton(!liked, likeButton);\n      updateLikeCount(card, likeCountElement);\n    })\n    .catch((err) => console.error(err));\n}\n\n// Show card image popup\nfunction showImage(src, alt) {\n  openModal(modalTypeImage);\n\n  modalImage.src = src;\n  modalImage.alt = alt;\n  modalCaption.textContent = alt;\n}\n\n// Render cards from the array\nfunction renderCards(cards, listElement) {\n  cards.forEach((card) => {\n    const cardElement = createCard(userId, card, {\n      showImage,\n      removeCardHandler,\n      likeHandler,\n    });\n    listElement.append(cardElement);\n  });\n}\n\nfunction init() {\n  Promise.all([getUserData(), getInitialCards()])\n    .then(([userData, cards]) => {\n      userId = userData._id;\n      renderProfileInfo(userData);\n      renderCards(cards, placesListElement);\n    })\n    .catch((err) => console.error(err));\n\n  enableValidation(validationSettings);\n\n  // Avatar edit button\n  profileImage.addEventListener('click', avatarEditHandler);\n\n  // Profile edit button\n  profileEditButton.addEventListener('click', editProfileHandler);\n\n  // Add card button\n  newCardButton.addEventListener('click', addNewCardHandler);\n\n  // Modal close\n  const modals = document.querySelectorAll('.popup');\n  modals.forEach((modal) => {\n    // Overlay listener\n    modal.addEventListener('click', (e) => overlayClickHandler(e, modal));\n\n    // Close button listener\n    const closeBtn = modal.querySelector('.popup__close');\n    closeBtn.addEventListener('click', () => closeModal(modal));\n  });\n\n  // Forms submit\n  editAvatarForm.addEventListener('submit', editAvatarSubmitHandler);\n  editProfileForm.addEventListener('submit', editProfileSubmitHandler);\n  addNewPlaceForm.addEventListener('submit', addNewPlaceSubmitHandler);\n  removeCardForm.addEventListener('submit', confirmRemoveCard);\n}\n\ninit();\n"],"names":["createCard","userId","card","_ref","showImage","removeCardHandler","likeHandler","cardElement","document","querySelector","content","cloneNode","cardTitle","cardImage","deleteButton","likeButton","likeCount","textContent","name","src","link","alt","likes","length","liked","find","addEventListener","_id","owner","remove","toggleLikeButton","classList","add","openModal","modal","escPressHandler","closeModal","removeEventListener","e","key","clearValidation","form","settings","submitButton","submitButtonSelector","inputs","Array","from","querySelectorAll","inputSelector","toggleSubmitButton","forEach","input","hideInputError","button","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","inputContainer","closest","inputWrapperSelector","inputErrorClass","errorElement","errorSelector","errorVisibleClass","config","baseUrl","headers","authorization","handleResponse","res","isArray","every","response","ok","Promise","all","map","json","reject","cardToDelete","validationSettings","formSelector","placesListElement","profileEditButton","newCardButton","profileImage","profileTitle","profileDescription","modalTypeEditAvatar","modalTypeEditProfile","modalTypeNewCard","modalTypeRemoveCard","modalTypeImage","modalImage","modalCaption","editAvatarForm","forms","editProfileForm","addNewPlaceForm","removeCardForm","toggleLoadingStatus","text","renderProfileInfo","avatar","about","style","backgroundImage","concat","cardId","id","element","likeCountElement","contains","options","method","_objectSpread","fetch","then","updateLike","updateLikeCount","catch","err","console","error","_ref2","_ref3","userData","cards","listElement","append","renderCards","patternMismatch","setCustomValidity","dataset","errorMessage","errMessage","showInputError","validationMessage","isValid","setEventListeners","reset","value","description","target","overlayClickHandler","avatarUrl","preventDefault","submitter","body","JSON","stringify","finally","cardData","prepend"],"sourceRoot":""}