{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Create card function\nexport function createCard(\n  userId,\n  card,\n  { showImage, removeCardHandler, likeHandler }\n) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n\n  const cardTitle = cardElement.querySelector('.card__title');\n  const cardImage = cardElement.querySelector('.card__image');\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const likeCount = cardElement.querySelector('.card__like-count');\n\n  cardTitle.textContent = card.name;\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n  likeCount.textContent = card.likes.length;\n  const liked = card.likes.some(user => user._id === userId);\n\n  if (liked) {\n    toggleLikeButton(true, likeButton);\n  }\n\n  cardImage.addEventListener('click', () =>\n    showImage(cardImage.src, cardImage.alt)\n  );\n\n  likeButton.addEventListener('click', () => {\n    const likeActive = likeButton.classList.contains('card__like-button_is-active');\n    likeHandler(card._id, likeActive, likeButton, likeCount);\n  });\n\n  if (userId === card.owner._id) {\n    deleteButton.addEventListener('click', () =>\n      removeCardHandler(card._id, cardElement)\n    );\n  } else {\n    deleteButton.remove();\n  }\n\n  return cardElement;\n}\n\nexport function removeCard(card) {\n  card.remove();\n}\n\nexport function toggleLikeButton(liked, likeButton) {\n  if (liked) {\n    likeButton.classList.add('card__like-button_is-active');\n  } else {\n    likeButton.classList.remove('card__like-button_is-active');\n  }\n}\n\nexport function updateLikeCount(card, likeCountElement) {\n  likeCountElement.textContent = card.likes.length;\n}\n","// Show modal\nexport function openModal(modal) {\n  modal.classList.add('popup_is-opened');\n\n  document.addEventListener('keydown', escPressHandler);\n}\n\n// Hide modal\nexport function closeModal(modal) {\n  modal.classList.remove('popup_is-opened');\n\n  document.removeEventListener('keydown', escPressHandler);\n}\n\nfunction escPressHandler(e) {\n  if (e.key === 'Escape') {\n    const openedModal = document.querySelector('.popup_is-opened');\n    closeModal(openedModal);\n  }\n}\n\nexport function overlayClickHandler(e, modal) {\n  if (e.target === modal) closeModal(modal);\n}\n","export function enableValidation(settings) {\n  const forms = Array.from(document.querySelectorAll(settings.formSelector));\n\n  forms.forEach((form) => {\n    setEventListeners(form, settings);\n  });\n}\n\nexport function clearValidation(form, settings) {\n  const submitButton = form.querySelector(settings.submitButtonSelector);\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\n\n  toggleSubmitButton(inputs, submitButton, settings);\n  inputs.forEach((input) => hideInputError(input, settings));\n}\n\nfunction setEventListeners(form, settings) {\n  const inputs = Array.from(form.querySelectorAll(settings.inputSelector));\n  const submitButton = form.querySelector(settings.submitButtonSelector);\n\n  inputs.forEach((input) => {\n    input.addEventListener('input', () => {\n      isValid(input, settings);\n      toggleSubmitButton(inputs, submitButton, settings);\n    });\n  });\n}\n\nfunction isValid(input, settings) {\n  if (input.validity.patternMismatch) {\n    input.setCustomValidity(input.dataset.errorMessage);\n  } else {\n    input.setCustomValidity('');\n  }\n\n  if (!input.validity.valid) {\n    showInputError(input, input.validationMessage, settings);\n  } else {\n    hideInputError(input, settings);\n  }\n}\n\nfunction hasInvalidInput(inputs) {\n  return inputs.some((input) => !input.validity.valid);\n}\n\nfunction toggleSubmitButton(inputs, button, settings) {\n  if (hasInvalidInput(inputs)) {\n    button.disabled = true;\n    button.classList.add(settings.inactiveButtonClass);\n  } else {\n    button.disabled = false;\n    button.classList.remove(settings.inactiveButtonClass);\n  }\n}\n\nfunction showInputError(input, errMessage, settings) {\n  const inputContainer = input.closest(settings.inputWrapperSelector);\n\n  input.classList.add(settings.inputErrorClass);\n\n  const errorElement = inputContainer.querySelector(settings.errorSelector);\n  errorElement.textContent = errMessage;\n  errorElement.classList.add(settings.errorVisibleClass);\n}\n\nfunction hideInputError(input, settings) {\n  const inputContainer = input.closest(settings.inputWrapperSelector);\n\n  input.classList.remove(settings.inputErrorClass);\n\n  const errorElement = inputContainer.querySelector(settings.errorSelector);\n  errorElement.textContent = '';\n  errorElement.classList.remove(settings.errorVisibleClass);\n}\n","const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-32',\n  headers: {\n    authorization: '69375b7f-2c05-445b-b0a3-b2c0034556e4',\n    'Content-Type': 'application/json',\n  },\n};\n\nconst handleResponse = (res) => {\n  if (Array.isArray(res) && res.every((response) => response.ok)) {\n    return Promise.all(res.map((response) => response.json()));\n  }\n  if (res.ok) return res.json();\n\n  return Promise.reject('Ошибка получения данных');\n};\n\nexport const getUserData = () =>\n  fetch(`${config.baseUrl}/users/me`, { headers: config.headers }).then(\n    handleResponse\n  );\n\nexport const getInitialCards = () =>\n  fetch(`${config.baseUrl}/cards`, { headers: config.headers }).then(\n    handleResponse\n  );\n\nexport const updateUserData = (userData) => {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify(userData),\n  };\n\n  return fetch(`${config.baseUrl}/users/me`, options).then(handleResponse);\n};\n\nexport const postNewCard = (cardData) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify(cardData),\n  };\n\n  return fetch(`${config.baseUrl}/cards`, options).then(handleResponse);\n};\n\nexport const deleteCard = (cardId) => {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      ...config.headers,\n    },\n  };\n\n  return fetch(`${config.baseUrl}/cards/${cardId}`, options).then(\n    handleResponse\n  );\n};\n\nexport const updateLike = (cardId, liked) => {\n  const likeMethod = liked ? 'DELETE' : 'PUT';\n\n  const options = {\n    method: likeMethod,\n    headers: {\n      ...config.headers,\n    },\n  };\n\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, options).then(\n    handleResponse\n  );\n};\n\nexport const updateAvatarUrl = (avatarUrl) => {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify({ avatar: avatarUrl }),\n  };\n\n  return fetch(`${config.baseUrl}/users/me/avatar`, options).then(\n    handleResponse\n  );\n};\n","import '../pages/index.css';\nimport {\n  createCard,\n  removeCard,\n  toggleLikeButton,\n  updateLikeCount,\n} from './card.js';\nimport { openModal, closeModal, overlayClickHandler } from './modal.js';\nimport { clearValidation, enableValidation } from './validation.js';\nimport {\n  getInitialCards,\n  getUserData,\n  updateUserData,\n  postNewCard,\n  deleteCard,\n  updateLike,\n  updateAvatarUrl,\n} from './api.js';\n\nlet userId = null;\nconst cardToDelete = {};\n\nconst validationSettings = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputWrapperSelector: '.popup__input-wrapper',\n  inputErrorClass: 'popup__input_type_error',\n  errorSelector: '.popup__error',\n  errorVisibleClass: 'popup__error_visible',\n};\n\n// DOM\n// General\nconst placesListElement = document.querySelector('.places__list');\nconst profileEditButton = document.querySelector('.profile__edit-button');\nconst newCardButton = document.querySelector('.profile__add-button');\n\n// Profile info\nconst profileImage = document.querySelector('.profile__image');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n\n// Modals\nconst modalTypeEditAvatar = document.querySelector('.popup_type_edit-avatar');\nconst modalTypeEditProfile = document.querySelector('.popup_type_edit');\nconst modalTypeNewCard = document.querySelector('.popup_type_new-card');\nconst modalTypeRemoveCard = document.querySelector('.popup_type_remove-card');\nconst modalTypeImage = document.querySelector('.popup_type_image');\nconst modalImage = modalTypeImage.querySelector('.popup__image');\nconst modalCaption = modalTypeImage.querySelector('.popup__caption');\n\n// Forms\nconst editAvatarForm = document.forms['edit-avatar'];\nconst editProfileForm = document.forms['edit-profile'];\nconst addNewPlaceForm = document.forms['new-place'];\nconst removeCardForm = document.forms['remove-card'];\n\n// Show remote data update status on submit button\nfunction toggleLoadingStatus(button, text) {\n  button.textContent = text;\n}\n\n// Open avatar edit modal\nfunction avatarEditHandler() {\n  editAvatarForm.reset();\n  clearValidation(editAvatarForm, validationSettings);\n  openModal(modalTypeEditAvatar);\n}\n\n// Submit avatar update form\nfunction editAvatarSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Сохранение...');\n\n  updateAvatarUrl(editAvatarForm.link.value)\n    .then((userData) => {\n      profileImage.style.backgroundImage = `url(${userData.avatar})`;\n      closeModal(modalTypeEditAvatar);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Сохранить');\n    });\n}\n\n// Open profile edit modal and insert default data into form\nfunction editProfileHandler() {\n  editProfileForm.name.value = profileTitle.textContent;\n  editProfileForm.description.value = profileDescription.textContent;\n\n  clearValidation(editProfileForm, validationSettings);\n  openModal(modalTypeEditProfile);\n}\n\n// Handle submit on profile edit\nfunction editProfileSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Сохранение...');\n\n  const userData = {\n    name: editProfileForm.name.value,\n    about: editProfileForm.description.value,\n  };\n\n  updateUserData(userData)\n    .then((userData) => {\n      renderProfileInfo(userData);\n      closeModal(modalTypeEditProfile);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Сохранить');\n    });\n}\n\n// Display user data\nfunction renderProfileInfo({ avatar, name, about }) {\n  profileImage.style.backgroundImage = `url(${avatar})`;\n  profileTitle.textContent = name;\n  profileDescription.textContent = about;\n}\n\n// Handle new card button\nfunction addNewCardHandler() {\n  addNewPlaceForm.reset();\n  clearValidation(addNewPlaceForm, validationSettings);\n  openModal(modalTypeNewCard);\n}\n\n// Add new card on new place form submit\nfunction addNewPlaceSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Создание...');\n\n  const card = {\n    name: addNewPlaceForm['place-name'].value,\n    link: addNewPlaceForm.link.value,\n  };\n\n  postNewCard(card)\n    .then((card) => {\n      const cardElement = createCard(userId, card, {\n        showImage,\n        removeCardHandler,\n        likeHandler,\n      });\n      placesListElement.prepend(cardElement);\n      closeModal(modalTypeNewCard);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Создать');\n    });\n}\n\n// Open modal to confirm card deletion\nfunction removeCardHandler(cardId, cardElement) {\n  cardToDelete.id = cardId;\n  cardToDelete.element = cardElement;\n\n  openModal(modalTypeRemoveCard);\n}\n\n// Delete card and close modal\nfunction confirmRemoveCard(e) {\n  e.preventDefault();\n\n  deleteCard(cardToDelete.id)\n    .then(() => {\n      removeCard(cardToDelete.element);\n      closeModal(modalTypeRemoveCard);\n    })\n    .catch((err) => console.error(err));\n}\n\n// Control like button and counter\n// Update like counter through API\nfunction likeHandler(cardId, liked, likeButton, likeCountElement) {\n  updateLike(cardId, liked)\n    .then((card) => {\n      toggleLikeButton(!liked, likeButton);\n      updateLikeCount(card, likeCountElement);\n    })\n    .catch((err) => console.error(err));\n}\n\n// Show card image popup\nfunction showImage(src, alt) {\n  openModal(modalTypeImage);\n\n  modalImage.src = src;\n  modalImage.alt = alt;\n  modalCaption.textContent = alt;\n}\n\n// Render cards from the array\nfunction renderCards(cards, listElement) {\n  cards.forEach((card) => {\n    const cardElement = createCard(userId, card, {\n      showImage,\n      removeCardHandler,\n      likeHandler,\n    });\n    listElement.append(cardElement);\n  });\n}\n\nfunction init() {\n  Promise.all([getUserData(), getInitialCards()])\n    .then(([userData, cards]) => {\n      userId = userData._id;\n      renderProfileInfo(userData);\n      renderCards(cards, placesListElement);\n    })\n    .catch((err) => console.error(err));\n\n  enableValidation(validationSettings);\n\n  // Avatar edit button\n  profileImage.addEventListener('click', avatarEditHandler);\n\n  // Profile edit button\n  profileEditButton.addEventListener('click', editProfileHandler);\n\n  // Add card button\n  newCardButton.addEventListener('click', addNewCardHandler);\n\n  // Modal close\n  const modals = document.querySelectorAll('.popup');\n  modals.forEach((modal) => {\n    // Overlay listener\n    modal.addEventListener('click', (e) => overlayClickHandler(e, modal));\n\n    // Close button listener\n    const closeBtn = modal.querySelector('.popup__close');\n    closeBtn.addEventListener('click', () => closeModal(modal));\n  });\n\n  // Forms submit\n  editAvatarForm.addEventListener('submit', editAvatarSubmitHandler);\n  editProfileForm.addEventListener('submit', editProfileSubmitHandler);\n  addNewPlaceForm.addEventListener('submit', addNewPlaceSubmitHandler);\n  removeCardForm.addEventListener('submit', confirmRemoveCard);\n}\n\ninit();\n"],"names":["createCard","userId","card","_ref","showImage","removeCardHandler","likeHandler","cardElement","document","querySelector","content","cloneNode","cardTitle","cardImage","deleteButton","likeButton","likeCount","textContent","name","src","link","alt","likes","length","some","user","_id","toggleLikeButton","addEventListener","likeActive","classList","contains","owner","remove","liked","add","openModal","modal","escPressHandler","closeModal","removeEventListener","e","key","clearValidation","form","settings","submitButton","submitButtonSelector","inputs","Array","from","querySelectorAll","inputSelector","toggleSubmitButton","forEach","input","hideInputError","button","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","inputContainer","closest","inputWrapperSelector","inputErrorClass","errorElement","errorSelector","errorVisibleClass","config","baseUrl","headers","authorization","handleResponse","res","isArray","every","response","ok","Promise","all","map","json","reject","cardToDelete","validationSettings","formSelector","placesListElement","profileEditButton","newCardButton","profileImage","profileTitle","profileDescription","modalTypeEditAvatar","modalTypeEditProfile","modalTypeNewCard","modalTypeRemoveCard","modalTypeImage","modalImage","modalCaption","editAvatarForm","forms","editProfileForm","addNewPlaceForm","removeCardForm","toggleLoadingStatus","text","renderProfileInfo","avatar","about","style","backgroundImage","concat","cardId","id","element","likeCountElement","options","method","_objectSpread","fetch","then","updateLike","updateLikeCount","catch","err","console","error","_ref2","_ref3","userData","cards","listElement","append","renderCards","patternMismatch","setCustomValidity","dataset","errorMessage","errMessage","showInputError","validationMessage","isValid","setEventListeners","reset","value","description","target","overlayClickHandler","avatarUrl","preventDefault","submitter","body","JSON","stringify","finally","cardData","prepend"],"sourceRoot":""}