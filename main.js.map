{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/selectors.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js","webpack://mesto-project-ff/./src/scripts/validation.js"],"sourcesContent":["// Selectors to pass into functions in external modules\r\nexport const modalSelectors = {\r\n  modal: 'popup',\r\n  visible: 'popup_is-opened',\r\n  hidden: 'popup_is-animated',\r\n  close: 'popup__close',\r\n  btn: 'popup__button'\r\n};\r\n\r\nexport const cardSelectors = {\r\n  template: 'card-template',\r\n  card: 'card',\r\n  title: 'card__title',\r\n  image: 'card__image',\r\n  likeBtn: 'card__like-button',\r\n  likeCount: 'card__like-count',\r\n  deleteBtn: 'card__delete-button',\r\n  likeBtnActive: 'card__like-button_is-active',\r\n};\r\n\r\nexport const validationSelectors = {\r\n  form: 'popup__form',\r\n  input: 'popup__input',\r\n  submitBtn: 'popup__button',\r\n  disabledBtn: 'popup__button_disabled',\r\n  inputContainer: 'popup__input-wrapper',\r\n  inputError: 'popup__input_type_error',\r\n  error: 'popup__error',\r\n  errorVisible: 'popup__error_visible',\r\n}","// Delay for transition on modal open and close\nconst animationDelay = 600;\n\n// Escape press handler reference\n// Used as reference for removeEventListener\n// Allows args in callback and remains removable\nlet escHandlerReference;\n\n// Show modal\nexport function openModal(modal, selectors) {\n  const { visible, hidden } = selectors;\n\n  modal.classList.add(hidden);\n\n  setTimeout(() => {\n    modal.classList.add(visible);\n  });\n\n  if (!escHandlerReference) {\n    escHandlerReference = escPressHandler(modal, selectors);\n    document.addEventListener('keydown', escHandlerReference);\n  }\n}\n\n// Hide modal\nexport function closeModal(modal, selectors) {\n  const { visible, hidden } = selectors;\n\n  modal.classList.remove(visible);\n\n  if (escHandlerReference) {\n    document.removeEventListener('keydown', escHandlerReference);\n    escHandlerReference = null;\n  }\n\n  setTimeout(() => {\n    modal.classList.remove(hidden);\n  }, animationDelay);\n}\n\nfunction escPressHandler(modal, selectors) {\n  return (e) => {\n    if (e.key === 'Escape') closeModal(modal, selectors);\n  };\n}\n\nexport function closeButtonHandler(modal, selectors) {\n  closeModal(modal, selectors);\n}\n\nexport function overlayClickHandler(e, modal, selectors) {\n  if (e.target === modal) closeModal(modal, selectors);\n}\n","// Create card function\nexport function createCard(\n  userId,\n  card,\n  showImageHandler,\n  removeHandler,\n  likeHandler,\n  selectors\n) {\n  const cardTemplate = document.querySelector('#' + selectors.template).content;\n  const cardElement = cardTemplate\n    .querySelector('.' + selectors.card)\n    .cloneNode(true);\n\n  const cardTitle = cardElement.querySelector('.' + selectors.title);\n  const cardImage = cardElement.querySelector('.' + selectors.image);\n  const deleteButton = cardElement.querySelector('.' + selectors.deleteBtn);\n  const likeButton = cardElement.querySelector('.' + selectors.likeBtn);\n  const likeCount = cardElement.querySelector('.' + selectors.likeCount)\n\n  cardElement.dataset.id = card._id;\n  cardTitle.textContent = card.name;\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n  likeCount.textContent = card.likes.length;\n\n  cardImage.addEventListener('click', () =>\n    showImageHandler(cardImage.src, cardImage.alt)\n  );\n  likeButton.addEventListener('click', () =>\n    likeHandler(card._id, likeButton, likeCount)\n  );\n  \n  if (userId === card.owner._id) {\n    deleteButton.addEventListener('click', () => removeHandler(card._id));\n  } else {\n    deleteButton.remove();\n  }\n\n  if (card.likes.some(like => like._id === userId)) {\n    toggleLikeButton(true, likeButton, selectors);\n  }\n\n  return cardElement;\n}\n\nexport function removeCard(card) {\n  card.remove();\n}\n\nexport function toggleLikeButton(liked, likeButton, selectors) {\n  if (liked) {\n    likeButton.classList.add(selectors.likeBtnActive);\n  } else {\n    likeButton.classList.remove(selectors.likeBtnActive);\n  }\n}\n\nexport function updateLikeCount(likes, likeCount) {\n  likeCount.textContent = likes;\n}\n","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-32',\r\n  headers: {\r\n    authorization: '69375b7f-2c05-445b-b0a3-b2c0034556e4',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nexport const handleResponse = (res) => {\r\n  if (res.ok) return res.json();\r\n  return Promise.reject('Ошибка получения данных');\r\n};\r\n\r\nexport const checkMime = (url, type) => {\r\n  return fetch(url, { method: 'HEAD' })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        const mime = res.headers.get('content-type');\r\n        if (!mime.includes(type)) return Promise.reject('Не поддерживаемый формат');\r\n      } else {\r\n        return Promise.reject('Ошибка получения данных');\r\n      }\r\n    })\r\n}\r\n\r\nexport const getUserData = () => fetch(`${config.baseUrl}/users/me`, { headers: config.headers });\r\n\r\nexport const getInitialCards = () => fetch(`${config.baseUrl}/cards`, { headers: config.headers });\r\n\r\nexport const updateUserData = (userData) => {\r\n  const options = { \r\n    method: 'PATCH',\r\n    headers: {\r\n      ...config.headers,\r\n    },\r\n    body: JSON.stringify(userData),\r\n  }\r\n\r\n  return fetch(`${config.baseUrl}/users/me`, options);\r\n}\r\n\r\nexport const postNewCard = (cardData) => {\r\n  const options = { \r\n    method: 'POST',\r\n    headers: {\r\n      ...config.headers,\r\n    },\r\n    body: JSON.stringify(cardData),\r\n  }\r\n\r\n  return fetch(`${config.baseUrl}/cards`, options);\r\n}\r\n\r\nexport const deleteCard = (cardId) => {\r\n  const options = { \r\n    method: 'DELETE',\r\n    headers: {\r\n      ...config.headers,\r\n    },\r\n  }\r\n\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, options);\r\n}\r\n\r\nexport const updateLike = (cardId, liked) => {\r\n  const likeMethod = liked ? 'DELETE' : 'PUT';\r\n\r\n  const options = { \r\n    method: likeMethod,\r\n    headers: {\r\n      ...config.headers,\r\n    },\r\n  }\r\n\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, options);\r\n}\r\n\r\nexport const updateAvatarUrl = (avatarUrl) => {\r\n  const options = { \r\n    method: 'PATCH',\r\n    headers: {\r\n      ...config.headers,\r\n    },\r\n    body: JSON.stringify({ avatar: avatarUrl }),\r\n  }\r\n\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, options);\r\n}","import '../pages/index.css';\r\nimport { modalSelectors, cardSelectors, validationSelectors } from './selectors.js';\r\nimport { createCard, removeCard, toggleLikeButton, updateLikeCount } from './card.js';\r\nimport {\r\n  openModal,\r\n  closeModal,\r\n  closeButtonHandler,\r\n  overlayClickHandler,\r\n} from './modal.js';\r\nimport { clearValidation, enableValidation, showInputError } from './validation.js';\r\nimport { \r\n  handleResponse,\r\n  getInitialCards, \r\n  getUserData, \r\n  updateUserData, \r\n  postNewCard, \r\n  deleteCard, \r\n  updateLike,\r\n  updateAvatarUrl,\r\n  checkMime\r\n} from './api.js';\r\n\r\nlet userId;\r\n\r\n// DOM\r\n// General\r\nconst placesListElement = document.querySelector('.places__list');\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst newCardButton = document.querySelector('.profile__add-button');\r\n\r\n// Profile info\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\n\r\n// Modals\r\nconst modalTypeEditAvatar = document.querySelector('.popup_type_edit-avatar');\r\nconst modalTypeEditProfile = document.querySelector('.popup_type_edit');\r\nconst modalTypeNewCard = document.querySelector('.popup_type_new-card');\r\nconst modalTypeRemoveCard = document.querySelector('.popup_type_remove-card');\r\nconst modalTypeImage = document.querySelector('.popup_type_image');\r\nconst modalImage = modalTypeImage.querySelector('.popup__image');\r\nconst modalCaption = modalTypeImage.querySelector('.popup__caption');\r\nconst confirmRemoveButton = modalTypeRemoveCard.querySelector('.popup__button');\r\n\r\n// Forms\r\nconst editAvatarForm = document.forms['edit-avatar'];\r\nconst editProfileForm = document.forms['edit-profile'];\r\nconst addNewPlaceForm = document.forms['new-place'];\r\n\r\n// Show remote data update status on submit button\r\nfunction toggleLoadingStatus(button) {\r\n  if (button.textContent === 'Сохранить...') {\r\n    button.textContent = 'Сохранить';\r\n  } else {\r\n    button.textContent = 'Сохранить...'; \r\n  }\r\n}\r\n\r\n// Open avatar edit modal\r\nfunction avatarEditHandler() {\r\n  editAvatarForm.reset();\r\n  clearValidation(editAvatarForm, validationSelectors);\r\n  openModal(modalTypeEditAvatar, modalSelectors);\r\n}\r\n\r\n// Submit avatar update form\r\nfunction editAvatarSubmitHandler(e) {\r\n  e.preventDefault();\r\n\r\n  const submitButton = modalTypeEditAvatar.querySelector('.' + modalSelectors.btn);\r\n\r\n  toggleLoadingStatus(submitButton);\r\n  updateAvatar(editAvatarForm);\r\n}\r\n\r\nfunction updateAvatar(form) {\r\n  const submitButton = modalTypeEditAvatar.querySelector('.' + modalSelectors.btn);\r\n\r\n  checkMime(form.link.value, 'image')\r\n    .then(() => updateAvatarUrl(form.link.value))\r\n    .then(handleResponse)\r\n    .then(userData => {\r\n      profileImage.style.backgroundImage = `url(${userData.avatar})`\r\n      closeModal(modalTypeEditAvatar, modalSelectors);\r\n    })\r\n    .catch(err => {\r\n      toggleLoadingStatus(submitButton);\r\n      showInputError(form.link, err, validationSelectors);\r\n    })\r\n}\r\n\r\n// Open profile edit modal and insert default data into form\r\nfunction editProfileHandler() {\r\n  editProfileForm.name.value = profileTitle.textContent;\r\n  editProfileForm.description.value = profileDescription.textContent;\r\n\r\n  clearValidation(editProfileForm, validationSelectors);\r\n  openModal(modalTypeEditProfile, modalSelectors);\r\n}\r\n\r\n// Handle submit on profile edit\r\nfunction editProfileSubmitHandler(e) {\r\n  e.preventDefault();\r\n\r\n  const submitButton = modalTypeEditProfile.querySelector('.' + modalSelectors.btn);\r\n  toggleLoadingStatus(submitButton);\r\n\r\n  updateProfile(editProfileForm, profileTitle, profileDescription);\r\n}\r\n\r\n// Display user data\r\nfunction renderProfileInfo({ avatar, name, about }) {\r\n  profileImage.style.backgroundImage = `url(${avatar})`\r\n  profileTitle.textContent = name;\r\n  profileDescription.textContent = about;\r\n}\r\n\r\n// Update profile info on submit\r\nfunction updateProfile(form) {\r\n  const userData = {\r\n    name: form.name.value,\r\n    about: form.description.value,\r\n  }\r\n\r\n  updateUserData(userData)\r\n    .then(handleResponse)\r\n    .then(data => {\r\n      const submitButton = modalTypeEditProfile.querySelector('.' + modalSelectors.btn);\r\n\r\n      renderProfileInfo(data);\r\n      toggleLoadingStatus(submitButton);\r\n      closeModal(modalTypeEditProfile, modalSelectors);\r\n    })\r\n    .catch(err => console.error(err));\r\n}\r\n\r\n// Handle new card button\r\nfunction addNewCardHandler() {\r\n  addNewPlaceForm.reset();\r\n  clearValidation(addNewPlaceForm, validationSelectors);\r\n  openModal(modalTypeNewCard, modalSelectors);\r\n}\r\n\r\n// Add new card on new place form submit\r\nfunction addNewPlaceSubmitHandler(e) {\r\n  e.preventDefault();\r\n\r\n  const submitButton = modalTypeNewCard.querySelector('.' + modalSelectors.btn)\r\n\r\n  toggleLoadingStatus(submitButton);\r\n  addNewCard(addNewPlaceForm, placesListElement);\r\n}\r\n\r\n// Add new card to the list\r\nfunction addNewCard(form, listElement) {\r\n  const card = {\r\n    name: form['place-name'].value,\r\n    link: form.link.value,\r\n  };\r\n\r\n  postNewCard(card)\r\n    .then(handleResponse)\r\n    .then(card => {\r\n      const callbacks = [showImage, removeCardHandler, likeHandler];\r\n      const cardElement = createCard(userId, card, ...callbacks, cardSelectors);\r\n      const submitButton = modalTypeNewCard.querySelector('.' + modalSelectors.btn);\r\n\r\n      listElement.prepend(cardElement);\r\n      toggleLoadingStatus(submitButton);\r\n      closeModal(modalTypeNewCard, modalSelectors);\r\n    })\r\n    .catch(err => console.error(err));\r\n\r\n}\r\n\r\n// Open modal to confirm card deletion\r\nfunction removeCardHandler(cardId) {\r\n  openModal(modalTypeRemoveCard, modalSelectors);\r\n  modalTypeRemoveCard.dataset.cardId = cardId;\r\n}\r\n\r\n// Delete card and close modal\r\nfunction confirmRemoveCard() {\r\n  const cardId = modalTypeRemoveCard.dataset.cardId;\r\n\r\n  deleteCard(cardId)\r\n    .then(handleResponse)\r\n    .then(()=> {\r\n      const card = placesListElement.querySelector(`[data-id='${cardId}']`);\r\n      modalTypeRemoveCard.dataset.cardId = '';\r\n\r\n      closeModal(modalTypeRemoveCard, modalSelectors);\r\n      removeCard(card);\r\n    })\r\n    .catch(err => console.error(err));\r\n}\r\n\r\n// Control like button and counter\r\n// Update like counter through API\r\nfunction likeHandler(cardId, likeButton, likeCount) {\r\n  getInitialCards()\r\n    .then(handleResponse)\r\n    .then(cards => {\r\n      const card = cards.find(card => card._id === cardId);\r\n      const liked = card.likes.some(like => like._id === userId);\r\n      \r\n      updateLike(cardId, liked)\r\n      .then(handleResponse)\r\n      .then(card => {\r\n          toggleLikeButton(!liked, likeButton, cardSelectors);\r\n          updateLikeCount(card.likes.length, likeCount);\r\n      });\r\n    })\r\n    .catch(err => console.error(err));\r\n}\r\n\r\n// Show card image popup\r\nfunction showImage(src, alt) {\r\n  openModal(modalTypeImage, modalSelectors);\r\n\r\n  modalImage.src = src;\r\n  modalImage.alt = alt;\r\n  modalCaption.textContent = alt;\r\n}\r\n\r\n// Render cards from the array\r\nfunction renderCards(cards, listElement) {\r\n  cards.forEach((card) => {\r\n    const callbacks = [showImage, removeCardHandler, likeHandler];\r\n    const cardElement = createCard(userId, card, ...callbacks, cardSelectors);\r\n    listElement.append(cardElement);\r\n  });\r\n}\r\n\r\nfunction init() {\r\n  Promise.all([getUserData(), getInitialCards()])\r\n    .then(([userDataRes, cardsRes]) => {\r\n      if (userDataRes.ok && cardsRes.ok) return Promise.all([userDataRes.json(), cardsRes.json()]);\r\n      return Promise.reject('Запрос к серверу завершился с ошибкой.');\r\n    })\r\n    .then(([userData, cards]) => {\r\n      userId = userData._id;\r\n      renderProfileInfo(userData);\r\n      renderCards(cards, placesListElement);\r\n    })\r\n    .catch(err => console.error(err));\r\n\r\n  enableValidation(validationSelectors);\r\n\r\n  // Avatar edit button\r\n  profileImage.addEventListener('click', avatarEditHandler);\r\n\r\n  // Profile edit button\r\n  profileEditButton.addEventListener('click', editProfileHandler);\r\n\r\n  // Add card button\r\n  newCardButton.addEventListener('click', addNewCardHandler);\r\n\r\n  // Confirm remove card button\r\n  confirmRemoveButton.addEventListener('click', confirmRemoveCard);\r\n\r\n  // Modal close\r\n  const modals = [\r\n    modalTypeEditAvatar,\r\n    modalTypeEditProfile, \r\n    modalTypeImage, \r\n    modalTypeNewCard, \r\n    modalTypeRemoveCard\r\n  ];\r\n  modals.forEach((modal) => {\r\n    // Overlay listener\r\n    modal.addEventListener('click', (e) =>\r\n      overlayClickHandler(e, modal, modalSelectors)\r\n    );\r\n\r\n    // Close button listener\r\n    const closeBtn = modal.querySelector('.' + modalSelectors.close);\r\n    closeBtn.addEventListener('click', () =>\r\n      closeButtonHandler(modal, modalSelectors)\r\n    );\r\n  });\r\n\r\n  // Forms submit\r\n  editAvatarForm.addEventListener('submit', editAvatarSubmitHandler);\r\n  editProfileForm.addEventListener('submit', editProfileSubmitHandler);\r\n  addNewPlaceForm.addEventListener('submit', addNewPlaceSubmitHandler);\r\n}\r\n\r\ninit();","import { checkMime } from \"./api\";\r\n\r\nexport function enableValidation(selectors) {\r\n  const forms = Array.from(document.querySelectorAll('.' + selectors.form));\r\n\r\n  forms.forEach(form => {\r\n    setEventListeners(form, selectors);\r\n  });\r\n}\r\n\r\n// TODO\r\nexport function clearValidation(form, selectors) {\r\n  const submitButton =  form.querySelector('.' + selectors.submitBtn);\r\n  const inputs = Array.from(form.querySelectorAll('.' + selectors.input));\r\n  \r\n  toggleSubmitButton(inputs, submitButton, selectors);\r\n  inputs.forEach(input => hideInputError(input, selectors));\r\n}\r\n\r\nfunction setEventListeners(form, selectors) {\r\n  const inputs = Array.from(form.querySelectorAll('.' + selectors.input));\r\n  const submitButton =  form.querySelector('.' + selectors.submitBtn);\r\n\r\n  inputs.forEach(input => {\r\n    input.addEventListener('input', () => {\r\n      isValid(input, selectors);\r\n      toggleSubmitButton(inputs, submitButton, selectors);\r\n    });\r\n  })\r\n}\r\n\r\nfunction isValid(input, selectors) {\r\n  if (input.validity.patternMismatch) {\r\n    input.setCustomValidity(input.dataset.errorMessage);\r\n  } else {\r\n    input.setCustomValidity('');\r\n  }\r\n\r\n  if (!input.validity.valid) {\r\n    showInputError(input, input.validationMessage, selectors);\r\n  } else {\r\n    hideInputError(input, selectors);\r\n  }\r\n}\r\n\r\nfunction hasInvalidInput(inputs) {\r\n  return inputs.some(input => !input.validity.valid)\r\n}\r\n\r\nfunction toggleSubmitButton(inputs, button, selectors) {\r\n  if (hasInvalidInput(inputs)) {\r\n    button.disabled = true;\r\n    button.classList.add(selectors.disabledBtn);\r\n  } else {\r\n    button.disabled = false;\r\n    button.classList.remove(selectors.disabledBtn);\r\n  }\r\n}\r\n\r\nexport function showInputError(input, errMessage, selectors) {\r\n  const inputContainer = input.closest('.' + selectors.inputContainer);\r\n\r\n  input.classList.add(selectors.inputError);\r\n\r\n  const errorElement = inputContainer.querySelector('.' + selectors.error);\r\n  errorElement.textContent = errMessage;\r\n  errorElement.classList.add(selectors.errorVisible);\r\n}\r\n\r\nfunction hideInputError(input, selectors) {\r\n  const inputContainer = input.closest('.' + selectors.inputContainer);\r\n\r\n  input.classList.remove(selectors.inputError);\r\n\r\n  const errorElement = inputContainer.querySelector('.' + selectors.error);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(selectors.errorVisible);\r\n}"],"names":["escHandlerReference","modalSelectors","modal","visible","hidden","close","btn","cardSelectors","template","card","title","image","likeBtn","likeCount","deleteBtn","likeBtnActive","validationSelectors","form","input","submitBtn","disabledBtn","inputContainer","inputError","error","errorVisible","createCard","userId","showImageHandler","removeHandler","likeHandler","selectors","cardElement","document","querySelector","content","cloneNode","cardTitle","cardImage","deleteButton","likeButton","dataset","id","_id","textContent","name","src","link","alt","likes","length","addEventListener","owner","remove","some","like","toggleLikeButton","liked","classList","add","openModal","setTimeout","e","key","closeModal","escPressHandler","removeEventListener","config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","getInitialCards","fetch","concat","clearValidation","submitButton","inputs","Array","from","querySelectorAll","toggleSubmitButton","forEach","hideInputError","button","validity","valid","hasInvalidInput","disabled","showInputError","errMessage","closest","errorElement","placesListElement","profileEditButton","newCardButton","profileImage","profileTitle","profileDescription","modalTypeEditAvatar","modalTypeEditProfile","modalTypeNewCard","modalTypeRemoveCard","modalTypeImage","modalImage","modalCaption","confirmRemoveButton","editAvatarForm","forms","editProfileForm","addNewPlaceForm","toggleLoadingStatus","renderProfileInfo","_ref","avatar","about","style","backgroundImage","removeCardHandler","cardId","then","cards","find","options","method","_objectSpread","updateLike","updateLikeCount","catch","err","console","showImage","all","_ref2","_ref3","_slicedToArray","userDataRes","cardsRes","_ref4","_ref5","userData","listElement","callbacks","apply","append","renderCards","patternMismatch","setCustomValidity","errorMessage","validationMessage","isValid","setEventListeners","reset","value","description","deleteCard","removeCard","target","overlayClickHandler","closeButtonHandler","url","preventDefault","get","includes","avatarUrl","body","JSON","stringify","data","cardData","prepend"],"sourceRoot":""}