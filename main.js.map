{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/selectors.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js","webpack://mesto-project-ff/./src/scripts/validation.js"],"sourcesContent":["// Selectors to pass into functions in external modules\nexport const modalSelectors = {\n  modal: 'popup',\n  visible: 'popup_is-opened',\n  hidden: 'popup_is-animated',\n  close: 'popup__close',\n  btn: 'popup__button',\n};\n\nexport const cardSelectors = {\n  template: 'card-template',\n  card: 'card',\n  title: 'card__title',\n  image: 'card__image',\n  likeBtn: 'card__like-button',\n  likeCount: 'card__like-count',\n  deleteBtn: 'card__delete-button',\n  likeBtnActive: 'card__like-button_is-active',\n};\n\nexport const validationSelectors = {\n  form: 'popup__form',\n  input: 'popup__input',\n  submitBtn: 'popup__button',\n  disabledBtn: 'popup__button_disabled',\n  inputContainer: 'popup__input-wrapper',\n  inputError: 'popup__input_type_error',\n  error: 'popup__error',\n  errorVisible: 'popup__error_visible',\n};\n","// Delay for transition on modal open and close\nconst animationDelay = 600;\n\n// Escape press handler reference\n// Used as reference for removeEventListener\n// Allows args in callback and remains removable\nlet escHandlerReference;\n\n// Show modal\nexport function openModal(modal, selectors) {\n  const { visible, hidden } = selectors;\n\n  modal.classList.add(hidden);\n\n  setTimeout(() => {\n    modal.classList.add(visible);\n  });\n\n  if (!escHandlerReference) {\n    escHandlerReference = escPressHandler(modal, selectors);\n    document.addEventListener('keydown', escHandlerReference);\n  }\n}\n\n// Hide modal\nexport function closeModal(modal, selectors) {\n  const { visible, hidden } = selectors;\n\n  modal.classList.remove(visible);\n\n  if (escHandlerReference) {\n    document.removeEventListener('keydown', escHandlerReference);\n    escHandlerReference = null;\n  }\n\n  setTimeout(() => {\n    modal.classList.remove(hidden);\n  }, animationDelay);\n}\n\nfunction escPressHandler(modal, selectors) {\n  return (e) => {\n    if (e.key === 'Escape') closeModal(modal, selectors);\n  };\n}\n\nexport function closeButtonHandler(modal, selectors) {\n  closeModal(modal, selectors);\n}\n\nexport function overlayClickHandler(e, modal, selectors) {\n  if (e.target === modal) closeModal(modal, selectors);\n}\n","// Create card function\nexport function createCard(\n  userId,\n  card,\n  showImageHandler,\n  removeHandler,\n  likeHandler,\n  selectors\n) {\n  const cardTemplate = document.querySelector('#' + selectors.template).content;\n  const cardElement = cardTemplate\n    .querySelector('.' + selectors.card)\n    .cloneNode(true);\n\n  const cardTitle = cardElement.querySelector('.' + selectors.title);\n  const cardImage = cardElement.querySelector('.' + selectors.image);\n  const deleteButton = cardElement.querySelector('.' + selectors.deleteBtn);\n  const likeButton = cardElement.querySelector('.' + selectors.likeBtn);\n  const likeCount = cardElement.querySelector('.' + selectors.likeCount);\n\n  cardElement.dataset.id = card._id;\n  cardTitle.textContent = card.name;\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n  likeCount.textContent = card.likes.length;\n\n  cardImage.addEventListener('click', () =>\n    showImageHandler(cardImage.src, cardImage.alt)\n  );\n  likeButton.addEventListener('click', () =>\n    likeHandler(card._id, likeButton, likeCount)\n  );\n\n  if (userId === card.owner._id) {\n    deleteButton.addEventListener('click', () => removeHandler(card._id));\n  } else {\n    deleteButton.remove();\n  }\n\n  if (card.likes.some((like) => like._id === userId)) {\n    toggleLikeButton(true, likeButton, selectors);\n  }\n\n  return cardElement;\n}\n\nexport function removeCard(card) {\n  card.remove();\n}\n\nexport function toggleLikeButton(liked, likeButton, selectors) {\n  if (liked) {\n    likeButton.classList.add(selectors.likeBtnActive);\n  } else {\n    likeButton.classList.remove(selectors.likeBtnActive);\n  }\n}\n\nexport function updateLikeCount(likes, likeCount) {\n  likeCount.textContent = likes;\n}\n","const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-32',\n  headers: {\n    authorization: '69375b7f-2c05-445b-b0a3-b2c0034556e4',\n    'Content-Type': 'application/json',\n  },\n};\n\nexport const handleResponse = (res) => {\n  if (res.ok) return res.json();\n  return Promise.reject('Ошибка получения данных');\n};\n\nexport const checkMime = (url, type) => {\n  return fetch(url, { method: 'HEAD' }).then((res) => {\n    if (res.ok) {\n      const mime = res.headers.get('content-type');\n      if (!mime.includes(type))\n        return Promise.reject('Не поддерживаемый формат');\n    } else {\n      return Promise.reject('Ошибка получения данных');\n    }\n  });\n};\n\nexport const getUserData = () =>\n  fetch(`${config.baseUrl}/users/me`, { headers: config.headers });\n\nexport const getInitialCards = () =>\n  fetch(`${config.baseUrl}/cards`, { headers: config.headers });\n\nexport const updateUserData = (userData) => {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify(userData),\n  };\n\n  return fetch(`${config.baseUrl}/users/me`, options);\n};\n\nexport const postNewCard = (cardData) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify(cardData),\n  };\n\n  return fetch(`${config.baseUrl}/cards`, options);\n};\n\nexport const deleteCard = (cardId) => {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      ...config.headers,\n    },\n  };\n\n  return fetch(`${config.baseUrl}/cards/${cardId}`, options);\n};\n\nexport const updateLike = (cardId, liked) => {\n  const likeMethod = liked ? 'DELETE' : 'PUT';\n\n  const options = {\n    method: likeMethod,\n    headers: {\n      ...config.headers,\n    },\n  };\n\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, options);\n};\n\nexport const updateAvatarUrl = (avatarUrl) => {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify({ avatar: avatarUrl }),\n  };\n\n  return fetch(`${config.baseUrl}/users/me/avatar`, options);\n};\n","import '../pages/index.css';\nimport {\n  modalSelectors,\n  cardSelectors,\n  validationSelectors,\n} from './selectors.js';\nimport {\n  createCard,\n  removeCard,\n  toggleLikeButton,\n  updateLikeCount,\n} from './card.js';\nimport {\n  openModal,\n  closeModal,\n  closeButtonHandler,\n  overlayClickHandler,\n} from './modal.js';\nimport {\n  clearValidation,\n  enableValidation,\n  showInputError,\n} from './validation.js';\nimport {\n  handleResponse,\n  getInitialCards,\n  getUserData,\n  updateUserData,\n  postNewCard,\n  deleteCard,\n  updateLike,\n  updateAvatarUrl,\n  checkMime,\n} from './api.js';\n\nlet userId;\n\nconst submitButtonStates = {\n  initial: 'Сохранить',\n  busy: 'Сохранить...'\n}\n\n// DOM\n// General\nconst placesListElement = document.querySelector('.places__list');\nconst profileEditButton = document.querySelector('.profile__edit-button');\nconst newCardButton = document.querySelector('.profile__add-button');\n\n// Profile info\nconst profileImage = document.querySelector('.profile__image');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n\n// Modals\nconst modalTypeEditAvatar = document.querySelector('.popup_type_edit-avatar');\nconst modalTypeEditProfile = document.querySelector('.popup_type_edit');\nconst modalTypeNewCard = document.querySelector('.popup_type_new-card');\nconst modalTypeRemoveCard = document.querySelector('.popup_type_remove-card');\nconst modalTypeImage = document.querySelector('.popup_type_image');\nconst modalImage = modalTypeImage.querySelector('.popup__image');\nconst modalCaption = modalTypeImage.querySelector('.popup__caption');\nconst confirmRemoveButton = modalTypeRemoveCard.querySelector('.popup__button');\n\n// Forms\nconst editAvatarForm = document.forms['edit-avatar'];\nconst editProfileForm = document.forms['edit-profile'];\nconst addNewPlaceForm = document.forms['new-place'];\n\n// Show remote data update status on submit button\nfunction toggleLoadingStatus(button) {\n  if (button.textContent === submitButtonStates.initial) {\n    button.textContent = submitButtonStates.busy;\n  } else {\n    button.textContent = submitButtonStates.initial;\n  }\n}\n\n// Open avatar edit modal\nfunction avatarEditHandler() {\n  editAvatarForm.reset();\n  clearValidation(editAvatarForm, validationSelectors);\n  openModal(modalTypeEditAvatar, modalSelectors);\n}\n\n// Submit avatar update form\nfunction editAvatarSubmitHandler(e) {\n  e.preventDefault();\n\n  const submitButton = modalTypeEditAvatar.querySelector(\n    '.' + modalSelectors.btn\n  );\n\n  toggleLoadingStatus(submitButton);\n  updateAvatar(editAvatarForm);\n}\n\nfunction updateAvatar(form) {\n  const submitButton = modalTypeEditAvatar.querySelector(\n    '.' + modalSelectors.btn\n  );\n\n  checkMime(form.link.value, 'image')\n    .then(() => updateAvatarUrl(form.link.value))\n    .then(handleResponse)\n    .then((userData) => {\n      profileImage.style.backgroundImage = `url(${userData.avatar})`;\n      closeModal(modalTypeEditAvatar, modalSelectors);\n    })\n    .catch((err) => {\n      toggleLoadingStatus(submitButton);\n      showInputError(form.link, err, validationSelectors);\n    });\n}\n\n// Open profile edit modal and insert default data into form\nfunction editProfileHandler() {\n  editProfileForm.name.value = profileTitle.textContent;\n  editProfileForm.description.value = profileDescription.textContent;\n\n  clearValidation(editProfileForm, validationSelectors);\n  openModal(modalTypeEditProfile, modalSelectors);\n}\n\n// Handle submit on profile edit\nfunction editProfileSubmitHandler(e) {\n  e.preventDefault();\n\n  const submitButton = modalTypeEditProfile.querySelector(\n    '.' + modalSelectors.btn\n  );\n  toggleLoadingStatus(submitButton);\n\n  updateProfile(editProfileForm, profileTitle, profileDescription);\n}\n\n// Display user data\nfunction renderProfileInfo({ avatar, name, about }) {\n  profileImage.style.backgroundImage = `url(${avatar})`;\n  profileTitle.textContent = name;\n  profileDescription.textContent = about;\n}\n\n// Update profile info on submit\nfunction updateProfile(form) {\n  const userData = {\n    name: form.name.value,\n    about: form.description.value,\n  };\n\n  updateUserData(userData)\n    .then(handleResponse)\n    .then((data) => {\n      const submitButton = modalTypeEditProfile.querySelector(\n        '.' + modalSelectors.btn\n      );\n\n      renderProfileInfo(data);\n      toggleLoadingStatus(submitButton);\n      closeModal(modalTypeEditProfile, modalSelectors);\n    })\n    .catch((err) => console.error(err));\n}\n\n// Handle new card button\nfunction addNewCardHandler() {\n  addNewPlaceForm.reset();\n  clearValidation(addNewPlaceForm, validationSelectors);\n  openModal(modalTypeNewCard, modalSelectors);\n}\n\n// Add new card on new place form submit\nfunction addNewPlaceSubmitHandler(e) {\n  e.preventDefault();\n\n  const submitButton = modalTypeNewCard.querySelector('.' + modalSelectors.btn);\n\n  toggleLoadingStatus(submitButton);\n  addNewCard(addNewPlaceForm, placesListElement);\n}\n\n// Add new card to the list\nfunction addNewCard(form, listElement) {\n  const card = {\n    name: form['place-name'].value,\n    link: form.link.value,\n  };\n\n  postNewCard(card)\n    .then(handleResponse)\n    .then((card) => {\n      const callbacks = [showImage, removeCardHandler, likeHandler];\n      const cardElement = createCard(userId, card, ...callbacks, cardSelectors);\n      const submitButton = modalTypeNewCard.querySelector(\n        '.' + modalSelectors.btn\n      );\n\n      listElement.prepend(cardElement);\n      toggleLoadingStatus(submitButton);\n      closeModal(modalTypeNewCard, modalSelectors);\n    })\n    .catch((err) => console.error(err));\n}\n\n// Open modal to confirm card deletion\nfunction removeCardHandler(cardId) {\n  openModal(modalTypeRemoveCard, modalSelectors);\n  modalTypeRemoveCard.dataset.cardId = cardId;\n}\n\n// Delete card and close modal\nfunction confirmRemoveCard() {\n  const cardId = modalTypeRemoveCard.dataset.cardId;\n\n  deleteCard(cardId)\n    .then(handleResponse)\n    .then(() => {\n      const card = placesListElement.querySelector(`[data-id='${cardId}']`);\n      modalTypeRemoveCard.dataset.cardId = '';\n\n      removeCard(card);\n      closeModal(modalTypeRemoveCard, modalSelectors);\n    })\n    .catch((err) => console.error(err));\n}\n\n// Control like button and counter\n// Update like counter through API\nfunction likeHandler(cardId, likeButton, likeCount) {\n  getInitialCards()\n    .then(handleResponse)\n    .then((cards) => {\n      const card = cards.find((card) => card._id === cardId);\n      const liked = card.likes.some((like) => like._id === userId);\n\n      updateLike(cardId, liked)\n        .then(handleResponse)\n        .then((card) => {\n          toggleLikeButton(!liked, likeButton, cardSelectors);\n          updateLikeCount(card.likes.length, likeCount);\n        });\n    })\n    .catch((err) => console.error(err));\n}\n\n// Show card image popup\nfunction showImage(src, alt) {\n  openModal(modalTypeImage, modalSelectors);\n\n  modalImage.src = src;\n  modalImage.alt = alt;\n  modalCaption.textContent = alt;\n}\n\n// Render cards from the array\nfunction renderCards(cards, listElement) {\n  cards.forEach((card) => {\n    const callbacks = [showImage, removeCardHandler, likeHandler];\n    const cardElement = createCard(userId, card, ...callbacks, cardSelectors);\n    listElement.append(cardElement);\n  });\n}\n\nfunction init() {\n  Promise.all([getUserData(), getInitialCards()])\n    .then(([userDataRes, cardsRes]) => {\n      if (userDataRes.ok && cardsRes.ok)\n        return Promise.all([userDataRes.json(), cardsRes.json()]);\n      return Promise.reject('Запрос к серверу завершился с ошибкой.');\n    })\n    .then(([userData, cards]) => {\n      userId = userData._id;\n      renderProfileInfo(userData);\n      renderCards(cards, placesListElement);\n    })\n    .catch((err) => console.error(err));\n\n  enableValidation(validationSelectors);\n\n  // Avatar edit button\n  profileImage.addEventListener('click', avatarEditHandler);\n\n  // Profile edit button\n  profileEditButton.addEventListener('click', editProfileHandler);\n\n  // Add card button\n  newCardButton.addEventListener('click', addNewCardHandler);\n\n  // Confirm remove card button\n  confirmRemoveButton.addEventListener('click', confirmRemoveCard);\n\n  // Modal close\n  const modals = [\n    modalTypeEditAvatar,\n    modalTypeEditProfile,\n    modalTypeImage,\n    modalTypeNewCard,\n    modalTypeRemoveCard,\n  ];\n  modals.forEach((modal) => {\n    // Overlay listener\n    modal.addEventListener('click', (e) =>\n      overlayClickHandler(e, modal, modalSelectors)\n    );\n\n    // Close button listener\n    const closeBtn = modal.querySelector('.' + modalSelectors.close);\n    closeBtn.addEventListener('click', () =>\n      closeButtonHandler(modal, modalSelectors)\n    );\n  });\n\n  // Forms submit\n  editAvatarForm.addEventListener('submit', editAvatarSubmitHandler);\n  editProfileForm.addEventListener('submit', editProfileSubmitHandler);\n  addNewPlaceForm.addEventListener('submit', addNewPlaceSubmitHandler);\n}\n\ninit();\n","import { checkMime } from './api';\n\nexport function enableValidation(selectors) {\n  const forms = Array.from(document.querySelectorAll('.' + selectors.form));\n\n  forms.forEach((form) => {\n    setEventListeners(form, selectors);\n  });\n}\n\n// TODO\nexport function clearValidation(form, selectors) {\n  const submitButton = form.querySelector('.' + selectors.submitBtn);\n  const inputs = Array.from(form.querySelectorAll('.' + selectors.input));\n\n  toggleSubmitButton(inputs, submitButton, selectors);\n  inputs.forEach((input) => hideInputError(input, selectors));\n}\n\nfunction setEventListeners(form, selectors) {\n  const inputs = Array.from(form.querySelectorAll('.' + selectors.input));\n  const submitButton = form.querySelector('.' + selectors.submitBtn);\n\n  inputs.forEach((input) => {\n    input.addEventListener('input', () => {\n      isValid(input, selectors);\n      toggleSubmitButton(inputs, submitButton, selectors);\n    });\n  });\n}\n\nfunction isValid(input, selectors) {\n  if (input.validity.patternMismatch) {\n    input.setCustomValidity(input.dataset.errorMessage);\n  } else {\n    input.setCustomValidity('');\n  }\n\n  if (!input.validity.valid) {\n    showInputError(input, input.validationMessage, selectors);\n  } else {\n    hideInputError(input, selectors);\n  }\n}\n\nfunction hasInvalidInput(inputs) {\n  return inputs.some((input) => !input.validity.valid);\n}\n\nfunction toggleSubmitButton(inputs, button, selectors) {\n  if (hasInvalidInput(inputs)) {\n    button.disabled = true;\n    button.classList.add(selectors.disabledBtn);\n  } else {\n    button.disabled = false;\n    button.classList.remove(selectors.disabledBtn);\n  }\n}\n\nexport function showInputError(input, errMessage, selectors) {\n  const inputContainer = input.closest('.' + selectors.inputContainer);\n\n  input.classList.add(selectors.inputError);\n\n  const errorElement = inputContainer.querySelector('.' + selectors.error);\n  errorElement.textContent = errMessage;\n  errorElement.classList.add(selectors.errorVisible);\n}\n\nfunction hideInputError(input, selectors) {\n  const inputContainer = input.closest('.' + selectors.inputContainer);\n\n  input.classList.remove(selectors.inputError);\n\n  const errorElement = inputContainer.querySelector('.' + selectors.error);\n  errorElement.textContent = '';\n  errorElement.classList.remove(selectors.errorVisible);\n}\n"],"names":["escHandlerReference","modalSelectors","modal","visible","hidden","close","btn","cardSelectors","template","card","title","image","likeBtn","likeCount","deleteBtn","likeBtnActive","validationSelectors","form","input","submitBtn","disabledBtn","inputContainer","inputError","error","errorVisible","createCard","userId","showImageHandler","removeHandler","likeHandler","selectors","cardElement","document","querySelector","content","cloneNode","cardTitle","cardImage","deleteButton","likeButton","dataset","id","_id","textContent","name","src","link","alt","likes","length","addEventListener","owner","remove","some","like","toggleLikeButton","liked","classList","add","openModal","setTimeout","e","key","closeModal","escPressHandler","removeEventListener","config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","getInitialCards","fetch","concat","clearValidation","submitButton","inputs","Array","from","querySelectorAll","toggleSubmitButton","forEach","hideInputError","button","validity","valid","hasInvalidInput","disabled","showInputError","errMessage","closest","errorElement","submitButtonStates","placesListElement","profileEditButton","newCardButton","profileImage","profileTitle","profileDescription","modalTypeEditAvatar","modalTypeEditProfile","modalTypeNewCard","modalTypeRemoveCard","modalTypeImage","modalImage","modalCaption","confirmRemoveButton","editAvatarForm","forms","editProfileForm","addNewPlaceForm","toggleLoadingStatus","renderProfileInfo","_ref","avatar","about","style","backgroundImage","removeCardHandler","cardId","then","cards","find","options","method","_objectSpread","updateLike","updateLikeCount","catch","err","console","showImage","all","_ref2","_ref3","_slicedToArray","userDataRes","cardsRes","_ref4","_ref5","userData","listElement","callbacks","apply","append","renderCards","patternMismatch","setCustomValidity","errorMessage","validationMessage","isValid","setEventListeners","reset","value","description","deleteCard","removeCard","target","overlayClickHandler","closeButtonHandler","url","preventDefault","get","includes","avatarUrl","body","JSON","stringify","data","cardData","prepend"],"sourceRoot":""}