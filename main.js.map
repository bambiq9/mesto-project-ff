{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Create card function\nexport function createCard(\n  userId,\n  card,\n  liked,\n  { showImage, removeCardHandler, likeHandler }\n) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n\n  const cardTitle = cardElement.querySelector('.card__title');\n  const cardImage = cardElement.querySelector('.card__image');\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const likeCount = cardElement.querySelector('.card__like-count');\n\n  cardTitle.textContent = card.name;\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n  likeCount.textContent = card.likes.length;\n\n  cardImage.addEventListener('click', () =>\n    showImage(cardImage.src, cardImage.alt)\n  );\n  likeButton.addEventListener('click', () =>\n    likeHandler(card._id, likeButton, likeCount)\n  );\n\n  if (userId === card.owner._id) {\n    deleteButton.addEventListener('click', () => removeCardHandler(card._id));\n  } else {\n    deleteButton.remove();\n  }\n\n  if (liked) {\n    toggleLikeButton(true, likeButton);\n  }\n\n  return cardElement;\n}\n\nexport function removeCard(card) {\n  card.remove();\n}\n\nexport function toggleLikeButton(liked, likeButton) {\n  if (liked) {\n    likeButton.classList.add('card__like-button_is-active');\n  } else {\n    likeButton.classList.remove('card__like-button_is-active');\n  }\n}\n\nexport function updateLikeCount(likes, likeCount) {\n  likeCount.textContent = likes;\n}\n","// Show modal\nexport function openModal(modal) {\n  modal.classList.add('popup_is-opened');\n\n  document.addEventListener('keydown', escPressHandler);\n}\n\n// Hide modal\nexport function closeModal(modal) {\n  modal.classList.remove('popup_is-opened');\n\n  document.removeEventListener('keydown', escPressHandler);\n}\n\nfunction escPressHandler(e) {\n  if (e.key === 'Escape') {\n    const openedModal = document.querySelector('.popup_is-opened');\n    closeModal(openedModal);\n  }\n}\n\nexport function closeButtonHandler(modal) {\n  closeModal(modal);\n}\n\nexport function overlayClickHandler(e, modal) {\n  if (e.target === modal) closeModal(modal);\n}\n","export function enableValidation() {\n  const forms = Array.from(document.querySelectorAll('.popup__form'));\n\n  forms.forEach((form) => {\n    setEventListeners(form);\n  });\n}\n\n// TODO\nexport function clearValidation(form) {\n  const submitButton = form.querySelector('.popup__button');\n  const inputs = Array.from(form.querySelectorAll('.popup__input'));\n\n  toggleSubmitButton(inputs, submitButton);\n  inputs.forEach((input) => hideInputError(input));\n}\n\nfunction setEventListeners(form) {\n  const inputs = Array.from(form.querySelectorAll('.popup__input'));\n  const submitButton = form.querySelector('.popup__button');\n\n  inputs.forEach((input) => {\n    input.addEventListener('input', () => {\n      isValid(input);\n      toggleSubmitButton(inputs, submitButton);\n    });\n  });\n}\n\nfunction isValid(input) {\n  if (input.validity.patternMismatch) {\n    input.setCustomValidity(input.dataset.errorMessage);\n  } else {\n    input.setCustomValidity('');\n  }\n\n  if (!input.validity.valid) {\n    showInputError(input, input.validationMessage);\n  } else {\n    hideInputError(input);\n  }\n}\n\nfunction hasInvalidInput(inputs) {\n  return inputs.some((input) => !input.validity.valid);\n}\n\nfunction toggleSubmitButton(inputs, button) {\n  if (hasInvalidInput(inputs)) {\n    button.disabled = true;\n    button.classList.add('.popup__button_disabled');\n  } else {\n    button.disabled = false;\n    button.classList.remove('.popup__button_disabled');\n  }\n}\n\nexport function showInputError(input, errMessage) {\n  const inputContainer = input.closest('.popup__input-wrapper');\n\n  input.classList.add('popup__input_type_error');\n\n  const errorElement = inputContainer.querySelector('.popup__error');\n  errorElement.textContent = errMessage;\n  errorElement.classList.add('popup__error_visible');\n}\n\nfunction hideInputError(input) {\n  const inputContainer = input.closest('.popup__input-wrapper');\n\n  input.classList.remove('popup__input_type_error');\n\n  const errorElement = inputContainer.querySelector('.popup__error');\n  errorElement.textContent = '';\n  errorElement.classList.remove('popup__error_visible');\n}\n","const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-32',\n  headers: {\n    authorization: '69375b7f-2c05-445b-b0a3-b2c0034556e4',\n    'Content-Type': 'application/json',\n  },\n};\n\nexport const handleResponse = (res) => {\n  if (Array.isArray(res) && res.every((response) => response.ok)) {\n    return Promise.all(res.map((response) => response.json()));\n  }\n  if (res.ok) return res.json();\n\n  return Promise.reject('Ошибка получения данных');\n};\n\nexport const getUserData = () =>\n  fetch(`${config.baseUrl}/users/me`, { headers: config.headers });\n\nexport const getInitialCards = () =>\n  fetch(`${config.baseUrl}/cards`, { headers: config.headers });\n\nexport const updateUserData = (userData) => {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify(userData),\n  };\n\n  return fetch(`${config.baseUrl}/users/me`, options);\n};\n\nexport const postNewCard = (cardData) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify(cardData),\n  };\n\n  return fetch(`${config.baseUrl}/cards`, options);\n};\n\nexport const deleteCard = (cardId) => {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      ...config.headers,\n    },\n  };\n\n  return fetch(`${config.baseUrl}/cards/${cardId}`, options);\n};\n\nexport const updateLike = (cardId, liked) => {\n  const likeMethod = liked ? 'DELETE' : 'PUT';\n\n  const options = {\n    method: likeMethod,\n    headers: {\n      ...config.headers,\n    },\n  };\n\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, options);\n};\n\nexport const updateAvatarUrl = (avatarUrl) => {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      ...config.headers,\n    },\n    body: JSON.stringify({ avatar: avatarUrl }),\n  };\n\n  return fetch(`${config.baseUrl}/users/me/avatar`, options);\n};\n","import '../pages/index.css';\nimport {\n  createCard,\n  removeCard,\n  toggleLikeButton,\n  updateLikeCount,\n} from './card.js';\nimport {\n  openModal,\n  closeModal,\n  closeButtonHandler,\n  overlayClickHandler,\n} from './modal.js';\nimport { clearValidation, enableValidation } from './validation.js';\nimport {\n  handleResponse,\n  getInitialCards,\n  getUserData,\n  updateUserData,\n  postNewCard,\n  deleteCard,\n  updateLike,\n  updateAvatarUrl,\n} from './api.js';\n\nlet userId = null;\nlet removeCardId = null;\nconst cardsCache = new Map();\n\n// DOM\n// General\nconst placesListElement = document.querySelector('.places__list');\nconst profileEditButton = document.querySelector('.profile__edit-button');\nconst newCardButton = document.querySelector('.profile__add-button');\n\n// Profile info\nconst profileImage = document.querySelector('.profile__image');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n\n// Modals\nconst modalTypeEditAvatar = document.querySelector('.popup_type_edit-avatar');\nconst modalTypeEditProfile = document.querySelector('.popup_type_edit');\nconst modalTypeNewCard = document.querySelector('.popup_type_new-card');\nconst modalTypeRemoveCard = document.querySelector('.popup_type_remove-card');\nconst modalTypeImage = document.querySelector('.popup_type_image');\nconst modalImage = modalTypeImage.querySelector('.popup__image');\nconst modalCaption = modalTypeImage.querySelector('.popup__caption');\nconst confirmRemoveButton = modalTypeRemoveCard.querySelector('.popup__button');\n\n// Forms\nconst editAvatarForm = document.forms['edit-avatar'];\nconst editProfileForm = document.forms['edit-profile'];\nconst addNewPlaceForm = document.forms['new-place'];\n\n// Show remote data update status on submit button\nfunction toggleLoadingStatus(button, text) {\n  button.textContent = text;\n}\n\n// Open avatar edit modal\nfunction avatarEditHandler() {\n  editAvatarForm.reset();\n  clearValidation(editAvatarForm);\n  openModal(modalTypeEditAvatar);\n}\n\n// Submit avatar update form\nfunction editAvatarSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Сохранение...');\n\n  updateAvatarUrl(editAvatarForm.link.value)\n    .then(handleResponse)\n    .then((userData) => {\n      profileImage.style.backgroundImage = `url(${userData.avatar})`;\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Сохранить');\n      closeModal(modalTypeEditAvatar);\n    });\n}\n\n// Open profile edit modal and insert default data into form\nfunction editProfileHandler() {\n  editProfileForm.name.value = profileTitle.textContent;\n  editProfileForm.description.value = profileDescription.textContent;\n\n  clearValidation(editProfileForm);\n  openModal(modalTypeEditProfile);\n}\n\n// Handle submit on profile edit\nfunction editProfileSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Сохранение...');\n\n  const userData = {\n    name: editProfileForm.name.value,\n    about: editProfileForm.description.value,\n  };\n\n  updateUserData(userData)\n    .then(handleResponse)\n    .then((userData) => {\n      renderProfileInfo(userData);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Сохранить');\n      closeModal(modalTypeEditProfile);\n    });\n}\n\n// Display user data\nfunction renderProfileInfo({ avatar, name, about }) {\n  profileImage.style.backgroundImage = `url(${avatar})`;\n  profileTitle.textContent = name;\n  profileDescription.textContent = about;\n}\n\n// Handle new card button\nfunction addNewCardHandler() {\n  addNewPlaceForm.reset();\n  clearValidation(addNewPlaceForm);\n  openModal(modalTypeNewCard);\n}\n\n// Add new card on new place form submit\nfunction addNewPlaceSubmitHandler(e) {\n  e.preventDefault();\n  toggleLoadingStatus(e.submitter, 'Создание...');\n\n  const card = {\n    name: addNewPlaceForm['place-name'].value,\n    link: addNewPlaceForm.link.value,\n  };\n\n  postNewCard(card)\n    .then(handleResponse)\n    .then((card) => {\n      const cardElement = createCard(userId, card, false, {\n        showImage,\n        removeCardHandler,\n        likeHandler,\n      });\n      cardsCache.set(card._id, { element: cardElement, like: false });\n      placesListElement.prepend(cardElement);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => {\n      toggleLoadingStatus(e.submitter, 'Создать');\n      closeModal(modalTypeNewCard);\n    });\n}\n\n// Open modal to confirm card deletion\nfunction removeCardHandler(cardId) {\n  removeCardId = cardId;\n  openModal(modalTypeRemoveCard);\n}\n\n// Delete card and close modal\nfunction confirmRemoveCard() {\n  deleteCard(removeCardId)\n    .then(handleResponse)\n    .then(() => {\n      const card = cardsCache.get(removeCardId).element;\n      cardsCache.delete(removeCardId);\n      removeCardId = null;\n      removeCard(card);\n    })\n    .catch((err) => console.error(err))\n    .finally(() => closeModal(modalTypeRemoveCard));\n}\n\n// Control like button and counter\n// Update like counter through API\nfunction likeHandler(cardId, likeButton, likeCount) {\n  const cardCached = cardsCache.get(cardId);\n\n  updateLike(cardId, cardCached.like)\n    .then(handleResponse)\n    .then((card) => {\n      toggleLikeButton(!cardCached.like, likeButton);\n      updateLikeCount(card.likes.length, likeCount);\n      cardsCache.set(cardId, {\n        ...cardsCache.get(cardId),\n        like: !cardCached.like,\n      });\n    })\n    .catch((err) => console.error(err));\n}\n\n// Show card image popup\nfunction showImage(src, alt) {\n  openModal(modalTypeImage);\n\n  modalImage.src = src;\n  modalImage.alt = alt;\n  modalCaption.textContent = alt;\n}\n\n// Render cards from the array\nfunction renderCards(cards, listElement) {\n  cards.forEach((card) => {\n    const liked = card.likes.some((like) => like._id === userId);\n    const cardElement = createCard(userId, card, liked, {\n      showImage,\n      removeCardHandler,\n      likeHandler,\n    });\n    cardsCache.set(card._id, { element: cardElement, like: liked });\n    listElement.append(cardElement);\n  });\n}\n\nfunction init() {\n  Promise.all([getUserData(), getInitialCards()])\n    .then(handleResponse)\n    .then(([userData, cards]) => {\n      userId = userData._id;\n      renderProfileInfo(userData);\n      renderCards(cards, placesListElement);\n    })\n    .catch((err) => console.error(err));\n\n  enableValidation();\n\n  // Avatar edit button\n  profileImage.addEventListener('click', avatarEditHandler);\n\n  // Profile edit button\n  profileEditButton.addEventListener('click', editProfileHandler);\n\n  // Add card button\n  newCardButton.addEventListener('click', addNewCardHandler);\n\n  // Confirm remove card button\n  confirmRemoveButton.addEventListener('click', confirmRemoveCard);\n\n  // Modal close\n  const modals = document.querySelectorAll('.popup');\n  modals.forEach((modal) => {\n    // Overlay listener\n    modal.addEventListener('click', (e) => overlayClickHandler(e, modal));\n\n    // Close button listener\n    const closeBtn = modal.querySelector('.popup__close');\n    closeBtn.addEventListener('click', () => closeButtonHandler(modal));\n  });\n\n  // Forms submit\n  editAvatarForm.addEventListener('submit', editAvatarSubmitHandler);\n  editProfileForm.addEventListener('submit', editProfileSubmitHandler);\n  addNewPlaceForm.addEventListener('submit', addNewPlaceSubmitHandler);\n}\n\ninit();\n"],"names":["createCard","userId","card","liked","_ref","showImage","removeCardHandler","likeHandler","cardElement","document","querySelector","content","cloneNode","cardTitle","cardImage","deleteButton","likeButton","likeCount","textContent","name","src","link","alt","likes","length","addEventListener","_id","owner","remove","toggleLikeButton","classList","add","openModal","modal","escPressHandler","closeModal","removeEventListener","e","key","clearValidation","form","submitButton","inputs","Array","from","querySelectorAll","toggleSubmitButton","forEach","input","hideInputError","button","some","validity","valid","hasInvalidInput","disabled","inputContainer","closest","errorElement","config","baseUrl","headers","authorization","handleResponse","res","isArray","every","response","ok","Promise","all","map","json","reject","removeCardId","cardsCache","Map","placesListElement","profileEditButton","newCardButton","profileImage","profileTitle","profileDescription","modalTypeEditAvatar","modalTypeEditProfile","modalTypeNewCard","modalTypeRemoveCard","modalTypeImage","modalImage","modalCaption","confirmRemoveButton","editAvatarForm","forms","editProfileForm","addNewPlaceForm","toggleLoadingStatus","text","renderProfileInfo","avatar","about","style","backgroundImage","concat","cardId","cardCached","get","options","method","_objectSpread","fetch","updateLike","like","then","updateLikeCount","set","catch","err","console","error","_ref2","_ref3","userData","cards","listElement","element","append","renderCards","patternMismatch","setCustomValidity","dataset","errorMessage","errMessage","showInputError","validationMessage","isValid","setEventListeners","reset","value","description","delete","removeCard","finally","target","overlayClickHandler","closeButtonHandler","avatarUrl","preventDefault","submitter","body","JSON","stringify","cardData","prepend"],"sourceRoot":""}